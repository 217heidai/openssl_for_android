name: Android Build and Release

on:
  workflow_dispatch:
  push:
    branches: [ master ]

env:
  OPENSSL_VERSION: 3.5.0
  CURL_VERSION: 8.7.1
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  Compile_OpenSSL_for_Android:
    name: Compile OpenSSL ${{ matrix.ANDROID_TARGET_ABI }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - ANDROID_TARGET_ABI: armeabi-v7a
            ANDROID_TARGET_API: "21"
            ANDROID_NDK: r27c
          - ANDROID_TARGET_ABI: arm64-v8a
            ANDROID_TARGET_API: "21"
            ANDROID_NDK: r27c
          - ANDROID_TARGET_ABI: riscv64
            ANDROID_TARGET_API: "35"
            ANDROID_NDK: r27c
          - ANDROID_TARGET_ABI: x86
            ANDROID_TARGET_API: "21"
            ANDROID_NDK: r27c
          - ANDROID_TARGET_ABI: x86_64
            ANDROID_TARGET_API: "21"
            ANDROID_NDK: r27c

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install prerequisites
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq aria2

      - name: Download Android NDK
        run: |
          aria2c -q -o android-ndk-${{ matrix.ANDROID_NDK }}.zip \
            https://dl.google.com/android/repository/android-ndk-${{ matrix.ANDROID_NDK }}-linux.zip
          unzip -q android-ndk-${{ matrix.ANDROID_NDK }}.zip

      - name: Download OpenSSL
        run: |
          aria2c -q -o openssl-${{ env.OPENSSL_VERSION }}.tar.gz \
            https://github.com/openssl/openssl/releases/download/openssl-${{ env.OPENSSL_VERSION }}/openssl-${{ env.OPENSSL_VERSION }}.tar.gz
          tar xf openssl-${{ env.OPENSSL_VERSION }}.tar.gz

      - name: Build OpenSSL
        run: |
          bash openssl_build_new.sh \
            ${{ matrix.ANDROID_TARGET_API }} \
            ${{ matrix.ANDROID_TARGET_ABI }} \
            ${{ env.OPENSSL_VERSION }} \
            ${{ matrix.ANDROID_NDK }}

      - name: Package artifact
        id: package_openssl
        run: |
          tar -C openssl_${{ env.OPENSSL_VERSION }}_${{ matrix.ANDROID_TARGET_ABI }} \
            -czf OpenSSL_${{ env.OPENSSL_VERSION }}_${{ matrix.ANDROID_TARGET_ABI }}.tar.gz .
          echo "RELEASE_TAG=openssl-${{ env.OPENSSL_VERSION }}-${{ matrix.ANDROID_TARGET_ABI }}" >> $GITHUB_OUTPUT

      - name: Release OpenSSL build
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.package_openssl.outputs.RELEASE_TAG }}
          files: OpenSSL_${{ env.OPENSSL_VERSION }}_${{ matrix.ANDROID_TARGET_ABI }}.tar.gz

  Compile_cURL_for_Android:
    needs: Compile_OpenSSL_for_Android
    name: Compile cURL ${{ matrix.ANDROID_TARGET_ABI }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - ANDROID_TARGET_ABI: armeabi-v7a
            ANDROID_TARGET_API: "21"
            ANDROID_NDK: r27c
          - ANDROID_TARGET_ABI: arm64-v8a
            ANDROID_TARGET_API: "21"
            ANDROID_NDK: r27c
          - ANDROID_TARGET_ABI: riscv64
            ANDROID_TARGET_API: "35"
            ANDROID_NDK: r27c
          - ANDROID_TARGET_ABI: x86
            ANDROID_TARGET_API: "21"
            ANDROID_NDK: r27c
          - ANDROID_TARGET_ABI: x86_64
            ANDROID_TARGET_API: "21"
            ANDROID_NDK: r27c

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install prerequisites
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq aria2 autoconf automake libtool pkg-config

      - name: Download Android NDK
        run: |
          aria2c -q -o android-ndk-${{ matrix.ANDROID_NDK }}.zip \
            https://dl.google.com/android/repository/android-ndk-${{ matrix.ANDROID_NDK }}-linux.zip
          unzip -q android-ndk-${{ matrix.ANDROID_NDK }}.zip

      - name: Download cURL
        run: |
          aria2c -q -o curl-${{ env.CURL_VERSION }}.tar.gz \
            https://curl.se/download/curl-${{ env.CURL_VERSION }}.tar.gz
          tar xf curl-${{ env.CURL_VERSION }}.tar.gz

      - name: Build cURL without SSL
        run: |
          bash curl_build.sh \
            ${{ matrix.ANDROID_TARGET_API }} \
            ${{ matrix.ANDROID_TARGET_ABI }} \
            ${{ env.CURL_VERSION }} \
            ${{ matrix.ANDROID_NDK }}

      - name: Package artifact
        id: package_curl
        run: |
          tar -C curl_${{ env.CURL_VERSION }}_${{ matrix.ANDROID_TARGET_ABI }} \
            -czf curl_${{ env.CURL_VERSION }}_${{ matrix.ANDROID_TARGET_ABI }}.tar.gz .
          echo "RELEASE_TAG=curl-${{ env.CURL_VERSION }}-${{ matrix.ANDROID_TARGET_ABI }}" >> $GITHUB_OUTPUT

      - name: Release cURL build
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.package_curl.outputs.RELEASE_TAG }}
          files: curl_${{ env.CURL_VERSION }}_${{ matrix.ANDROID_TARGET_ABI }}.tar.gz

  Delete_Workflow:
    needs:
      - Compile_OpenSSL_for_Android
      - Compile_cURL_for_Android
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup old runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 8
